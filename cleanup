#!/bin/sh

set -e
set -o pipefail
set -u

if type brew &>/dev/null; then
  # Clean up Homebrew caches.
  brew cleanup -s --prune=7 2>/dev/null | /usr/bin/grep -v '^==>' | /usr/bin/grep -v 'Nothing to do' &
fi

# Clean up Adobe patch files.
/bin/rm -rfv /Applications/Adobe/AdobePatchFiles &
/bin/rmdir /Applications/Adobe 2>/dev/null &

# Clean up .DS_Store, desktop.ini and $RECYCLE.BIN in ~/.
/usr/bin/find ~ -d \( -type f -and \( -iname desktop.ini -or -iname .DS_Store \) \) -or \( -type d -iname \$RECYCLE.BIN \) -maxdepth 5 -print0 | /usr/bin/xargs -0 /bin/rm -rv &

# Clean up dead symlinks in /Applications.
/usr/bin/find -d -L /Applications -type l -maxdepth 5 -print0 | /usr/bin/xargs -0 /bin/rm -v &

# Clean up dead symlinks in ~/Library.
/usr/bin/find -d -L ~/Library -type l -maxdepth 5 -print0 | /usr/bin/xargs -0 /bin/rm -v &

# Clean up Dropbox conflicts.
dropbox_dir="$(/usr/bin/head -n 2 ~/.dropbox/host.db | /usr/bin/tail -n 1 | /usr/bin/base64 -D)"
if test -d "${dropbox_dir}"; then
  /usr/bin/find -L "${dropbox_dir}" -iname "*in Konflikt stehende*" -maxdepth 20 -print0 | /usr/bin/xargs -0 /bin/rm -v &
fi

# Clean up Node modules.
/usr/bin/find -L "${dropbox_dir}" -name 'node_modules' -print0 | /usr/bin/xargs -0 /bin/rm -rv &

# Run Git housekeeping scripts.
/usr/bin/find -L "${dropbox_dir}" -name '.git' -print0 | /usr/bin/xargs -0 -I% git --git-dir='%' gc --aggressive --prune &

# Clean up Rust build artifacts.
if type cargo &>/dev/null; then
  /usr/bin/find ~/Documents -name 'Cargo.toml' -print0 | /usr/bin/xargs -0 -I% cargo clean --manifest-path='%' &
fi

wait
